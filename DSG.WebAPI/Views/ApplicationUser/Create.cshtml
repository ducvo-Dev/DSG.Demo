@model DSG.WebAPI.Models.ApplicationUserViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>
@using (Html.BeginForm("Create", "ApplicationUser", FormMethod.Post ,new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>ApplicationUserViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthDay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                @foreach (var item in Model.Groups)
                {
                    @*@Html.CheckBox(item.Name,htmlAttributes: new { id = "Groups", Name= "Groups" } )*@
                    @*@Html.CheckBoxFor(modelItem => item.Name)*@
                    @*@Html.CheckBoxFor(item => item.Name, new { htmlAttributes = new { @class = "form-control" } })*@
                    <input type="checkbox" id="Groups" name="Groups" value="@Model.Id" /> @item.Name
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 ">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    <script type="text/javascript">
        //take list check
        //var data = ["Admin", "Store ", "User lv1", "User lv2"];

        //$.each(data, function (index) {
        //    $('.checkboxlist').append("<input type='checkbox' name='students[]' value='" + data[index] + "' />" + data[index] + "<br/>");
        //});

        //function add(arr, item, comparator) {
        //    arr = .isArray(arr) ? arr : [];
        //    if (!contains(arr, item, comparator)) {
        //        arr.push(item);
        //    }
        //    return arr;
        //}
        //check list
        //var list = document.querySelector('label');
        //list.addEventListener('click', function(ev) {
        //    if (ev.target.tagName === 'input') {
        //    ev.target.classList.toggle('checked');
        //  }
        //}, false);

        //show list group
        $(document).on('click', "button[name='Update']", function () {
            let idLop = $(this).closest('tr').attr('id');
            $('#btnSubmit').hide();
            $('#btnUpdate').show();

            $.ajax({
                url: "/ApplicationUser/showlistGroup",
                type: "get",
                data: {
                },
                cache: false,
                timeout: 600000,
                success: function (data) {
                    if (data.code == 200) {
                        $.each(data, function (index) {
                            $('.checkboxlist').append("<input type='checkbox' name='students[]' value='" + data.L.Name + "' />" + data[index] + "<br/>");
                        });
                    } else {
                        console.log("ERROR : ");
                    }

                }
            });
        });
    </script>
}
